package week_05;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author abcmn
 */
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.nio.file.Paths;
import java.security.AlgorithmParameterGenerator;
import java.security. AlgorithmParameters;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security. KeyPairGenerator;
import java.security.MessageDigest;
import java.security. PublicKey;
import java.security.spec.X509EncodedKeySpec;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.KeyAgreement;
import javax.crypto.SecretKey;
import javax.crypto.spec. DHParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public class frm_Alice extends javax.swing.JFrame {

    /**
     * Creates new form frm_Alice
     */
    public frm_Alice() {
        initComponents();
    }
    
    @SuppressWarnings("unchecked")
    
    
    KeyAgreement aliceKeyAgree;
    PublicKey bobPubKey;
    SecretKey aliceDesKey;
    Cipher aliceCipher;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_bob_key = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_alice_key = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_shared_secret = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_encrypt_shared_secret = new javax.swing.JTextArea();
        btn_alice_key_generate = new javax.swing.JButton();
        btn_bob_key_display = new javax.swing.JButton();
        btn_make_secret_key = new javax.swing.JButton();
        btn_encrypt_secret_key = new javax.swing.JButton();
        btn_run_form = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Alice Form (D-H)");

        jLabel2.setText("Alice's key");

        jLabel3.setText("Bob's key");

        jLabel4.setText("Shared secret");

        jLabel5.setText("Encrypt shared secret");

        txt_bob_key.setColumns(20);
        txt_bob_key.setRows(5);
        jScrollPane2.setViewportView(txt_bob_key);

        txt_alice_key.setColumns(20);
        txt_alice_key.setRows(5);
        jScrollPane3.setViewportView(txt_alice_key);

        txt_shared_secret.setColumns(20);
        txt_shared_secret.setRows(5);
        jScrollPane4.setViewportView(txt_shared_secret);

        txt_encrypt_shared_secret.setColumns(20);
        txt_encrypt_shared_secret.setRows(5);
        jScrollPane5.setViewportView(txt_encrypt_shared_secret);

        btn_alice_key_generate.setText("Alice's key generate");
        btn_alice_key_generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alice_key_generateActionPerformed(evt);
            }
        });

        btn_bob_key_display.setText("Bob's key display ");
        btn_bob_key_display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bob_key_displayActionPerformed(evt);
            }
        });

        btn_make_secret_key.setText("Make secret key");
        btn_make_secret_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_make_secret_keyActionPerformed(evt);
            }
        });

        btn_encrypt_secret_key.setText("Encrypt secret key");
        btn_encrypt_secret_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_encrypt_secret_keyActionPerformed(evt);
            }
        });

        btn_run_form.setText("Run encrypt/decrypt form");
        btn_run_form.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_run_formActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_run_form)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(btn_bob_key_display, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3)
                                    .addComponent(jScrollPane4)
                                    .addComponent(jScrollPane5))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_alice_key_generate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_encrypt_secret_key, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_make_secret_key, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(44, 44, 44))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(btn_alice_key_generate)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(btn_bob_key_display, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(btn_make_secret_key)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btn_encrypt_secret_key)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_run_form)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_alice_key_generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alice_key_generateActionPerformed

        try {

            AlgorithmParameterGenerator paramGen =

                    AlgorithmParameterGenerator.getInstance("DH");

            paramGen.init(512);

            AlgorithmParameters params = paramGen.generateParameters();

            DHParameterSpec dhSkipParamSpec =

            (DHParameterSpec) params.getParameterSpec (DHParameterSpec.class); 
            System.out.println("Generating a DH KeyPair...");

            KeyPairGenerator aliceKpairGen = KeyPairGenerator.getInstance("DH");

            aliceKpairGen.initialize (dhSkipParamSpec);

            KeyPair aliceKpair = aliceKpairGen.generateKeyPair();

            System.out.println("Initializing the KeyAgreement Engine with DH private key");

            aliceKeyAgree = KeyAgreement.getInstance("DH");

            aliceKeyAgree.init(aliceKpair.getPrivate());

            byte[] alicePubKeyEnc = aliceKpair.getPublic().getEncoded();

            java.nio.file.Path dirPath = Paths.get("src/week_04");

            if (!java.nio.file.Files.exists(dirPath)) {

                java.nio.file.Files.createDirectories (dirPath);

            }

            try (FileOutputStream fos =

                new FileOutputStream(dirPath.resolve("A.pub").toFile())) { fos.write(alicePubKeyEnc);

            }

            txt_alice_key.setText (java.util.Base64.getEncoder() .encodeToString(alicePubKeyEnc));

        } catch (Exception ex) {

            ex.printStackTrace();

        }
    }//GEN-LAST:event_btn_alice_key_generateActionPerformed

    private void btn_bob_key_displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bob_key_displayActionPerformed
        try {

            byte[] bkeyP;

            try (FileInputStream fis =

            new FileInputStream (Paths.get("src/week_04/B.pub").toFile())) {

            bkeyP = new byte[fis.available()];

            fis.read(bkeyP);

            }

            txt_bob_key.setText (bkeyP.toString());

        } catch (Exception ex) {

            ex.printStackTrace();

        }        
    }//GEN-LAST:event_btn_bob_key_displayActionPerformed

    private void btn_run_formActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_run_formActionPerformed
        
        frm_DESCS des = new frm_DESCS();
        des.setVisible(true);
    }//GEN-LAST:event_btn_run_formActionPerformed

    private void btn_encrypt_secret_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_encrypt_secret_keyActionPerformed
        try {

            aliceKeyAgree.doPhase(bobPubKey, true);

            byte[] sharedSecret = aliceKeyAgree.generateSecret();

            txt_encrypt_shared_secret.setText(CryptoUtil.toHexString (sharedSecret));

            MessageDigest sha256 = MessageDigest.getInstance("SHA-256");

            byte[] desKeyBytes = Arrays.copyOf(sha256.digest (sharedSecret), 8);

            SecretKeySpec desKeySpec = new SecretKeySpec (desKeyBytes, "DES");

            txt_encrypt_shared_secret.setText(Base64.getEncoder()

            .encodeToString (desKeySpec.getEncoded()));

            String fileName = "src/week_04/A.txt";

            try (BufferedWriter bw = new BufferedWriter (new FileWriter (fileName))) {

                bw.write(Base64.getEncoder().encodeToString (desKeySpec.getEncoded()));

            }

        } catch (Exception ex) {

            ex.printStackTrace();

        }
    }//GEN-LAST:event_btn_encrypt_secret_keyActionPerformed

    private void btn_make_secret_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_make_secret_keyActionPerformed
        try {

            byte[] bobPubKeyEnc;

            try (FileInputStream fis =

                    new FileInputStream (Paths.get("src/week_04/B.pub").toFile())) 
                
                { bobPubKeyEnc = new byte[fis.available()];

                fis.read(bobPubKeyEnc);

            }

            KeyFactory aliceKeyFac = KeyFactory.getInstance("DH");

            X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec (bobPubKeyEnc);

            bobPubKey = aliceKeyFac.generatePublic (x509KeySpec);

            System.out.println("Executing PHASEI of key agreement...");

            aliceKeyAgree.doPhase (bobPubKey, true);

            byte[] aliceSharedSecret = aliceKeyAgree.generateSecret();

            System.out.println("khoa chung: secret (DEBUG ONLY):"

                    + CryptoUtil.toHexString(aliceSharedSecret));

            txt_shared_secret.setText (CryptoUtil.toHexString(aliceSharedSecret));

        } catch (Exception ex) {

            ex.printStackTrace();

        }
    }//GEN-LAST:event_btn_make_secret_keyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Alice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Alice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Alice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Alice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Alice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_alice_key_generate;
    private javax.swing.JButton btn_bob_key_display;
    private javax.swing.JButton btn_encrypt_secret_key;
    private javax.swing.JButton btn_make_secret_key;
    private javax.swing.JButton btn_run_form;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea txt_alice_key;
    private javax.swing.JTextArea txt_bob_key;
    private javax.swing.JTextArea txt_encrypt_shared_secret;
    private javax.swing.JTextArea txt_shared_secret;
    // End of variables declaration//GEN-END:variables
}
